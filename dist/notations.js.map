{"version":3,"sources":["../notations.js"],"names":["System","y","height","BaseCanvas","canvas","clientHeight","width","clientWidth","ctx","getContext","centerX","centerY","clearRect","SectorManager","smoothDepth","colorDepthThreshold","intervalThreshold","cbs","imageData","rcd","ReshapedColorData","depth","ImageProcess","getRowColorDepth","getContinuousBlocks","calculate","calcSystems","app","systems","splice","length","forEach","e","push"],"mappings":";;;;;;AAAA;;;;IAIMA,M,GACL,gBAAYC,CAAZ,EAAeC,MAAf,EAAuB;AAAA;;AACtB,MAAKD,CAAL,GAASA,CAAT;AACA,MAAKC,MAAL,GAAcA,MAAd;AACA,C;;IAGIC,U;AACL,qBAAYC,MAAZ,EAAoB;AAAA;;AACnB,OAAKA,MAAL,GAAcA,MAAd;AACA,OAAKA,MAAL,CAAYF,MAAZ,GAAqB,KAAKE,MAAL,CAAYC,YAAjC;AACA,OAAKD,MAAL,CAAYE,KAAZ,GAAoB,KAAKF,MAAL,CAAYG,WAAhC;AACA,OAAKC,GAAL,GAAW,KAAKJ,MAAL,CAAYK,UAAZ,CAAuB,IAAvB,CAAX;AACA,OAAKC,OAAL,GAAe,KAAKN,MAAL,CAAYE,KAAZ,GAAkB,CAAjC;AACA,OAAKK,OAAL,GAAe,KAAKP,MAAL,CAAYF,MAAZ,GAAmB,CAAlC;AACA,OAAKA,MAAL,GAAc,KAAKE,MAAL,CAAYF,MAA1B;AACA,OAAKI,KAAL,GAAa,KAAKF,MAAL,CAAYE,KAAzB;AACA;;;;0BACO;AACP,QAAKE,GAAL,CAASI,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKR,MAAL,CAAYE,KAArC,EAA4C,KAAKF,MAAL,CAAYF,MAAxD;AACA;;;;;;IAGIW,a;AACL,0BAAc;AAAA;;AACb,OAAKC,WAAL,GAAmB,CAAnB;AACA,OAAKC,mBAAL,GAA2B,IAA3B;AACA,OAAKC,iBAAL,GAAyB,EAAzB;AACA,OAAKC,GAAL,GAAW,EAAX;AACA;;;;uBACIC,S,EAAW;AACf,QAAKA,SAAL,GAAiBA,SAAjB;AACA,QAAKC,GAAL,GAAW,IAAIC,iBAAJ,CAAsBF,SAAtB,CAAX;AACA;;;gCACa;AACb,OAAI,CAAC,KAAKC,GAAV,EAAe;AACf,OAAIE,QAAQC,aAAaC,gBAAb,CAA8B,KAAKJ,GAAnC,EAAwC,KAAKL,WAA7C,CAAZ;AACA,QAAKG,GAAL,GAAWK,aAAaE,mBAAb,CAAiCH,KAAjC,EAAwC,KAAKN,mBAA7C,EAAkE,KAAKC,iBAAvE,CAAX;AACA;;;gCAC8B;AAAA,OAAnBS,SAAmB,uEAAP,KAAO;;AAC9B,OAAIA,SAAJ,EAAe,KAAKC,WAAL;AACfC,OAAIC,OAAJ,CAAYC,MAAZ,CAAmB,CAAnB,EAAqBF,IAAIC,OAAJ,CAAYE,MAAjC;AACA,QAAKb,GAAL,CAASc,OAAT,CAAiB,UAACC,CAAD,EAAO;AACvBL,QAAIC,OAAJ,CAAYK,IAAZ,CAAiB,IAAIjC,MAAJ,CAAWgC,EAAE,CAAF,CAAX,EAAiBA,EAAE,CAAF,CAAjB,CAAjB;AACA,IAFD;AAGA","file":"notations.js","sourcesContent":["/**\n * Created by somefive on 17-7-4.\n */\n\nclass System {\n\tconstructor(y, height) {\n\t\tthis.y = y;\n\t\tthis.height = height;\n\t}\n}\n\nclass BaseCanvas {\n\tconstructor(canvas) {\n\t\tthis.canvas = canvas;\n\t\tthis.canvas.height = this.canvas.clientHeight;\n\t\tthis.canvas.width = this.canvas.clientWidth;\n\t\tthis.ctx = this.canvas.getContext('2d');\n\t\tthis.centerX = this.canvas.width/2;\n\t\tthis.centerY = this.canvas.height/2;\n\t\tthis.height = this.canvas.height;\n\t\tthis.width = this.canvas.width;\n\t}\n\tclear() {\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t}\n}\n\nclass SectorManager {\n\tconstructor() {\n\t\tthis.smoothDepth = 3;\n\t\tthis.colorDepthThreshold = 0.98;\n\t\tthis.intervalThreshold = 50;\n\t\tthis.cbs = [];\n\t}\n\tload(imageData) {\n\t\tthis.imageData = imageData;\n\t\tthis.rcd = new ReshapedColorData(imageData);\n\t}\n\tcalcSystems() {\n\t\tif (!this.rcd) return;\n\t\tlet depth = ImageProcess.getRowColorDepth(this.rcd, this.smoothDepth);\n\t\tthis.cbs = ImageProcess.getContinuousBlocks(depth, this.colorDepthThreshold, this.intervalThreshold);\n\t}\n\tdrawSystems(calculate = false) {\n\t\tif (calculate) this.calcSystems();\n\t\tapp.systems.splice(0,app.systems.length);\n\t\tthis.cbs.forEach((e) => {\n\t\t\tapp.systems.push(new System(e[0], e[1]));\n\t\t});\n\t}\n}\n"]}